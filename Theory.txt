const arr = [10, 12, 15, 21]; // вводим массив
for (var i=0; i< arr.length; i++){ //делаем цикл для переменной i, пока i меньше длинны строки, прибавлять 1
setTimeout(function() 
{console.log(arr[i] > 13 ? 'Good: ${arr[i]}': 'Bad: ${arr[i]}') //сравниваем значение под номером i с константой 13. Если на выходе имеет True, то пишется первое значение, если False, то второе
},3000) // выполнять каждые 3 секунды
}
По идеи должно выводить: 
Good: 15 Good: 21
Bad: 10 Bad: 12
Однако на практике выведет: 
> "Bad: ${arr[i]}"
> "Bad: ${arr[i]}"
> "Bad: ${arr[i]}"
> "Bad: ${arr[i]}"

1. Исправим Var на let. 

const arr = [10, 12, 15, 21];
for (let i = 0; i < arr.length; i++){
	setTimeout(function(){
  	console.log(arr[i] > 13 ? 'Good: ${arr[i]}' : 'Bad: ${arr[i]}')
}, 3000)
}

Смотрим в вывод: 
> "Bad: ${arr[i]}"
> "Bad: ${arr[i]}"
> "Good: ${arr[i]}"
> "Good: ${arr[i]}"

2. Исправим вывод
 
const arr = [10, 12, 15, 21];
for (let i = 0; i < arr.length; i++){
	setTimeout(function(){
  	console.log(arr[i] > 13 ? 'Good:' + (arr[i]) : 'Bad:' + (arr[i]))
}, 3000)
}
Смотрим вывод: 
> "Bad:10"
> "Bad:12"
> "Good:15"
> "Good:21"


Ура! Теперь все работает. Пора ломать. Зачем мы делаем это через функцию Timeout и каждые 3 секунды получаем новый результат, если у нас не меняется массив? 
Это только нагружает систему, поэтому давайте это уберем. 
const arr = [10, 12, 15, 21];
for (let i = 0; i < arr.length; i++){
  	console.log(arr[i] > 13 ? 'Good:' + (arr[i]) : 'Bad:' + (arr[i]))
}
Вывод: 
> "Bad:10"
> "Bad:12"
> "Good:15"
> "Good:21"
Ну, все теперь красота. Больше вроде ничего не улучшить. :) 